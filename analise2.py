{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM+mfE2YIGoWDF2lJR9TwS2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rztDD5LGici-"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":[],"metadata":{"id":"JWSaU2Fvwlpn"}},{"cell_type":"markdown","source":[],"metadata":{"id":"kw7DKehowle_"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BZbWBtiAinsz","executionInfo":{"status":"ok","timestamp":1724513166356,"user_tz":180,"elapsed":2561,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"41ff2575-99d2-4265-ba9e-61712ed5250a"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["file_path = '/content/drive/My Drive/Rossmann.xlsx'\n","database = pd.read_excel(file_path)\n"],"metadata":{"id":"1GMnMnWijAmT","executionInfo":{"status":"ok","timestamp":1724513160972,"user_tz":180,"elapsed":319,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["database.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"gqG-9HtsjvHr","executionInfo":{"status":"ok","timestamp":1724513156369,"user_tz":180,"elapsed":340,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"00577c92-6f1d-4525-aa50-849f19863780"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        DayOfWeek       Month         Year        Sales    Customers  \\\n","count  942.000000  942.000000   942.000000   942.000000   942.000000   \n","mean     3.997877    5.961783  2013.837580  3945.704883   467.646497   \n","std      1.998404    3.350357     0.766009  2015.417840   228.930850   \n","min      1.000000    1.000000  2013.000000     0.000000     0.000000   \n","25%      2.000000    3.000000  2013.000000  3588.250000   463.000000   \n","50%      4.000000    6.000000  2014.000000  4373.500000   529.000000   \n","75%      6.000000    9.000000  2014.000000  5220.000000   598.750000   \n","max      7.000000   12.000000  2015.000000  9528.000000  1130.000000   \n","\n","             Open       Promo  SchoolHoliday  \n","count  942.000000  942.000000     942.000000  \n","mean     0.829087    0.382166       0.204883  \n","std      0.376633    0.486175       0.403831  \n","min      0.000000    0.000000       0.000000  \n","25%      1.000000    0.000000       0.000000  \n","50%      1.000000    0.000000       0.000000  \n","75%      1.000000    1.000000       0.000000  \n","max      1.000000    1.000000       1.000000  "],"text/html":["\n","  <div id=\"df-7971b8c6-27ee-447f-8d6d-c6716816922f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DayOfWeek</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","      <td>942.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.997877</td>\n","      <td>5.961783</td>\n","      <td>2013.837580</td>\n","      <td>3945.704883</td>\n","      <td>467.646497</td>\n","      <td>0.829087</td>\n","      <td>0.382166</td>\n","      <td>0.204883</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.998404</td>\n","      <td>3.350357</td>\n","      <td>0.766009</td>\n","      <td>2015.417840</td>\n","      <td>228.930850</td>\n","      <td>0.376633</td>\n","      <td>0.486175</td>\n","      <td>0.403831</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>2013.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>2013.000000</td>\n","      <td>3588.250000</td>\n","      <td>463.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.000000</td>\n","      <td>6.000000</td>\n","      <td>2014.000000</td>\n","      <td>4373.500000</td>\n","      <td>529.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>9.000000</td>\n","      <td>2014.000000</td>\n","      <td>5220.000000</td>\n","      <td>598.750000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7.000000</td>\n","      <td>12.000000</td>\n","      <td>2015.000000</td>\n","      <td>9528.000000</td>\n","      <td>1130.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7971b8c6-27ee-447f-8d6d-c6716816922f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7971b8c6-27ee-447f-8d6d-c6716816922f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7971b8c6-27ee-447f-8d6d-c6716816922f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fa5a444b-7cbb-40b8-b0d6-8ae3f9971bb8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa5a444b-7cbb-40b8-b0d6-8ae3f9971bb8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fa5a444b-7cbb-40b8-b0d6-8ae3f9971bb8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"database\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 331.74062084368296,\n        \"min\": 1.0,\n        \"max\": 942.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.997876857749469,\n          4.0,\n          942.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 331.02969764626005,\n        \"min\": 1.0,\n        \"max\": 942.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.961783439490445,\n          6.0,\n          942.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 757.021209311282,\n        \"min\": 0.7660085220297296,\n        \"max\": 2015.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          942.0,\n          2013.8375796178343,\n          2015.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2950.4674095373025,\n        \"min\": 0.0,\n        \"max\": 9528.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3945.704883227176,\n          4373.5,\n          942.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 361.0720699937836,\n        \"min\": 0.0,\n        \"max\": 1130.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          467.64649681528664,\n          529.0,\n          942.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 332.7845709770119,\n        \"min\": 0.0,\n        \"max\": 942.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.8290870488322718,\n          1.0,\n          0.3766328458820771\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Promo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 332.90267986298136,\n        \"min\": 0.0,\n        \"max\": 942.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3821656050955414,\n          1.0,\n          0.48617483961143676\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SchoolHoliday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 332.9662208174861,\n        \"min\": 0.0,\n        \"max\": 942.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.20488322717622082,\n          1.0,\n          0.4038306706766585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["database.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"N3JLIG0kkYOK","executionInfo":{"status":"ok","timestamp":1724513169413,"user_tz":180,"elapsed":336,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"07504d79-32c4-45ff-d403-a008d1889ba4"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   DayOfWeek  Month  Year  Sales  Customers  Open  Promo  SchoolHoliday\n","0          5      7  2015   5263        555     1      1              1\n","1          4      7  2015   5020        546     1      1              1\n","2          3      7  2015   4782        523     1      1              1\n","3          2      7  2015   5011        560     1      1              1\n","4          1      7  2015   6102        612     1      1              1"],"text/html":["\n","  <div id=\"df-3e2b8bda-f43e-42a2-bd7e-e115034240f4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DayOfWeek</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>2015</td>\n","      <td>5263</td>\n","      <td>555</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>2015</td>\n","      <td>5020</td>\n","      <td>546</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>2015</td>\n","      <td>4782</td>\n","      <td>523</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>2015</td>\n","      <td>5011</td>\n","      <td>560</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2015</td>\n","      <td>6102</td>\n","      <td>612</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e2b8bda-f43e-42a2-bd7e-e115034240f4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e2b8bda-f43e-42a2-bd7e-e115034240f4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e2b8bda-f43e-42a2-bd7e-e115034240f4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bedb0d9-cc90-4294-b51d-e34282e6042e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bedb0d9-cc90-4294-b51d-e34282e6042e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bedb0d9-cc90-4294-b51d-e34282e6042e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"database","summary":"{\n  \"name\": \"database\",\n  \"rows\": 942,\n  \"fields\": [\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          5,\n          4,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          9,\n          10,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2013,\n        \"max\": 2015,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2015,\n          2014,\n          2013\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2015,\n        \"min\": 0,\n        \"max\": 9528,\n        \"num_unique_values\": 711,\n        \"samples\": [\n          3667,\n          3883,\n          3869\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 228,\n        \"min\": 0,\n        \"max\": 1130,\n        \"num_unique_values\": 305,\n        \"samples\": [\n          508,\n          611,\n          551\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Promo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SchoolHoliday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# prompt: Usando o DataFrame database: Print only the Sales\n","\n","print(database['Sales']) # prints the Sales column\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"btDFhTgak8uX","executionInfo":{"status":"ok","timestamp":1724513172292,"user_tz":180,"elapsed":4,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"b70934fe-42da-4f40-eedc-72c70a9c8883"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["0      5263\n","1      5020\n","2      4782\n","3      5011\n","4      6102\n","       ... \n","937    4997\n","938    4486\n","939    4327\n","940    5530\n","941       0\n","Name: Sales, Length: 942, dtype: int64\n"]}]},{"cell_type":"code","source":["\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from google.colab import drive\n","\n","# Montar o Google Drive\n","drive.mount('/content/drive')\n","\n","# Caminho para o arquivo Excel\n","file_path = '/content/drive/My Drive/Rossmann.xlsx'\n","database = pd.read_excel(file_path)\n","\n","# Verificar se a coluna 'Sales' existe\n","print(\"Colunas disponíveis:\", database.columns)\n","\n","# Verifique se a coluna 'Sales' existe no DataFrame\n","if 'Sales' in database.columns:\n","    # Criar um DataFrame com a coluna 'Sales'\n","    data = {\n","        'Sale number': database['Sales'],\n","    }\n","\n","    df = pd.DataFrame(data)\n","    df.index.name = 'Sale number'\n","\n","    # Configurar o gráfico de barras, usando o índice como rótulo no eixo x\n","    df.plot(kind='bar', y='Sale number', legend=False)\n","    plt.xlabel('Sales number')\n","    plt.ylabel('Price')\n","    plt.title('Price of Sales')\n","    plt.show()\n","else:\n","    print(\"A coluna 'Sales' não foi encontrada no DataFrame.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"-jqHK6jOlGPR","executionInfo":{"status":"ok","timestamp":1724513616951,"user_tz":180,"elapsed":9454,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"008d854c-3c08-4d7d-fe33-260a2be78681"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Colunas disponíveis: Index(['DayOfWeek', 'Month', 'Year', 'Sales', 'Customers', 'Open', 'Promo',\n","       'SchoolHoliday'],\n","      dtype='object')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create a box-plot chart\n","plt.boxplot( database['Sales'])\n","plt.ylabel('Price')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"95peDaTmDada","executionInfo":{"status":"ok","timestamp":1724514232692,"user_tz":180,"elapsed":390,"user":{"displayName":"Nicolas Felix","userId":"01974987891970297197"}},"outputId":"f65f25dc-8fff-4e82-b89b-801199bb17e5"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}